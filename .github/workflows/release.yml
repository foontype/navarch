name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Install dependencies
      run: |
        # Install yq for YAML parsing
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq
        
        # Install shellcheck for linting
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
        # Install shfmt for formatting check
        go install mvdan.cc/sh/v3/cmd/shfmt@latest
        
        # Install bats for testing
        git clone https://github.com/bats-core/bats-core.git
        cd bats-core
        sudo ./install.sh /usr/local
        cd ..
        rm -rf bats-core
    
    - name: Run quality checks
      run: |
        # Lint bash scripts
        shellcheck src/navarch
        
        # Format check (this will exit with error if formatting is needed)
        shfmt -d src/navarch
        
        # Run tests
        bats tests/test_navarch.bats
    
    - name: Extract tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Verify NAVARCH_VERSION matches tag
      run: |
        TAG="${{ steps.tag.outputs.tag }}"
        # Remove 'v' prefix from tag if present
        VERSION="${TAG#v}"
        
        # Extract NAVARCH_VERSION from src/navarch
        SCRIPT_VERSION=$(grep '^NAVARCH_VERSION=' src/navarch | cut -d'"' -f2)
        
        if [[ "$VERSION" != "$SCRIPT_VERSION" ]]; then
          echo "Error: Tag version ($VERSION) does not match NAVARCH_VERSION in src/navarch ($SCRIPT_VERSION)"
          exit 1
        fi
        
        echo "Version check passed: Tag $TAG matches NAVARCH_VERSION $SCRIPT_VERSION"
    
    - name: Extract release notes
      id: release_notes
      run: |
        TAG="${{ steps.tag.outputs.tag }}"
        if ! yq eval "has(\"$TAG\")" release-notes.yml | grep -q true; then
          echo "Error: No release notes found for tag $TAG"
          exit 1
        fi
        yq eval ".\"$TAG\"" release-notes.yml > release_notes.txt
    
    - name: Create release package
      run: |
        mkdir -p release-package
        
        # Copy main script (the only essential file)
        cp src/navarch release-package/
        
        # Create release archive
        cd release-package
        zip -r ../navarch-${{ steps.tag.outputs.tag }}.zip .
        cd ..
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: release_notes.txt
        files: navarch-${{ steps.tag.outputs.tag }}.zip
        draft: false
        prerelease: false